{"version":3,"sources":["../../src/EmojiComponent.js","../../src/lib/emojiEvent.js","../../src/EmojiPicker.js","../../src/EmojiCounter.js","../../src/lib/useEmojis.js","../../src/EmojiBlock.js","CustomReactions.js","CustomReactionsV2.js","DefaultReactions.js","App.js","index.js"],"names":["EmojiComponent","emoji","onClick","React","className","role","aria-label","label","document","dispatchEvent","event","Event","bubbles","EmojiPicker","selectedEmojis","availableEmojis","useState","open","isOpen","toggleOpen","i","emojis","filter","e","map","includes","key","Fragment","length","data-testid","EmojiMenu","EmojiCounter","initialValue","useEmojis","initialEmojis","useReducer","reducer","dispatch","type","state","action","emojiFromState","em","counter","rea","selected","onUpdate","increment","useEffect","mappedReactions","sort","a","b","DEFAULT_EMOJI_OPTIONS","CustomReactions","style","margin","width","DefaultReactions","console","log","App","href","ReactDOM","render","getElementById"],"mappings":"wMAGwBA,SAAiBC,UAAOC,YAC9C,OACEC,0BACEC,UAAU,QACVC,KAAK,MACLC,aAAYL,EAAMM,MAAQN,EAAMM,MAAQ,QACxCL,QAAS,WACPA,GAAWA,IACXM,SAASC,cCXE,SAACR,GAElB,IAAMS,EAAQ,IAAIC,MAAM,QAAS,CAAEC,aAEnC,OADAF,EAAMT,MAAQA,EACPS,EAJU,CDWuBT,MAGnCA,EAAMA,gBEXWY,SACtBC,mBACAC,oBACAb,cAEuBc,uBAAhBC,OAAMC,OACPC,EAAa,kBAAMD,GAAQD,IAE7BG,EAAI,EACFC,EAASN,EACZO,QAAO,SAACC,WAAOT,WAAgBU,KAAI,SAACD,UAAMA,EAAEtB,SAAOwB,SAASF,EAAEtB,WAC9DuB,KAAI,SAACvB,GACJ,OACEE,kBAACH,GACC0B,MAAON,EACPnB,MAAOA,EACPC,QAAS,WACPA,EAAQD,GACRkB,UAiBV,OACEhB,kBAACwB,gBACEN,EAAOO,OAAS,GACfzB,0BAAMC,UAAU,cAAcF,QAASiB,GACrChB,kBAACH,GACCC,MAAO,CAAEA,MAAO,IAAKM,MAAO,cAC5BL,QAASiB,IAEXhB,mBAnBR,WACE,OACEA,yBACEC,UAAWa,EAAO,kBAAoB,oBACtCY,cAAY,cAEXR,KAaES,iBC3CaC,SAAe9B,cAAO+B,0BAAe,IAAG9B,YAC9D,OACEC,0BACEC,UAAU,kBACVF,QAASA,EAAU,kBAAMA,EAAQD,WACjC4B,cAAY,gBAEZ1B,kBAACH,GAAeC,MAAOA,IACvBE,6BACEA,0BAAMC,UAAU,iBAAiB4B,cCVjBC,EAAUC,kBAAgB,UACrBC,qBAAWC,YAAaF,IAApCG,OAKf,MAAO,CAAC,EAAD,GAHW,SAACpC,UAAUoC,EAAS,CAAEC,KAAM,YAAarC,MAAOA,KAChD,SAACA,UAAUoC,EAAS,CAAEC,KAAM,YAAarC,MAAOA,MAKpE,SAASmC,EAAQG,EAAOC,GACtB,IAAMvC,EAAQuC,EAAOvC,MACjBwC,EAAiBF,EAAMjB,QAAO,SAACoB,UAAOA,EAAGzC,QAAUA,EAAMA,SAAO,GAMpE,OAJKwC,IACHxC,EAAM0C,QAAU,EAChBF,EAAiBxC,GAEXuC,EAAOF,MACb,IAAK,YACHG,EAAeE,UACf,MACF,IAAK,YACHF,EAAeE,UACXF,EAAeE,QAAU,IAAGF,EAAeE,QAAU,GAE7D,gBACKJ,EAAMjB,QAAO,SAACsB,UAAQA,EAAI3C,QAAUwC,EAAexC,SAClDwC,EAAeE,QAAU,EAAI,CAACF,GAAkB,0BCxBnBpB,eAAQwB,SAAeC,eAC/Bb,uBAD2B,OAC/CM,OAAOQ,OAEdC,qBAAU,WACJF,GACFA,EAASP,KAEV,CAACA,EAAOO,IAEX,IAAI1B,EAAI,EACF6B,EAAkBV,EACrBW,MAAK,SAACC,EAAGC,UAAOD,EAAElD,MAAQmD,EAAEnD,MAAQ,GAAK,KACzCuB,KAAI,SAACvB,UACJE,kBAAC4B,GACCL,IAAKN,IACLnB,MAAOA,EACP+B,aAAc/B,EAAM0C,QACpBzC,QAAS6C,OAIf,OACE5C,yBAAKC,UAAU,iBAAiByB,cAAY,kBACzCoB,EACD9C,kBAACU,GACCC,eAAgByB,EAChBrC,QAAS6C,EACThC,gBAAiBM,MC7BzB,MAAMgC,EAAwB,CAC5B,CAAEpD,MAAO,eAAMM,MAAO,SACtB,CAAEN,MAAO,eAAMM,MAAO,UACtB,CAAEN,MAAO,eAAMM,MAAO,SACtB,CAAEN,MAAO,eAAMM,MAAO,YAGT,SAAS+C,IAAmB,MAAD,EACZrB,EAAU,CACpC,CAAEhC,MAAO,eAAMM,MAAO,QAASoC,QAAS,MAFF,mBACjCtB,EADiC,KACzB0B,EADyB,KAKxC,IAAI3B,EAAI,EACR,MAAMyB,EAAWxB,EACd6B,MAAK,CAACC,EAAGC,IAAOD,EAAElD,MAAQmD,EAAEnD,MAAQ,GAAK,IACzCuB,KAAKvB,GACJ,cAAC,EAAD,CAEEA,MAAOA,EACP+B,aAAc/B,EAAM0C,QACpBzC,QAAS6C,GAHJ3B,OAOX,OACE,sBAAKhB,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CACEW,gBAAiBsC,EACjBnD,QAAS6C,EACTjC,eAAgBO,MAGpB,uFACA,qBAAKjB,UAAU,mBAAf,SAAmCyC,OClCzC,MAAMQ,EAAwB,CAC5B,CAAEpD,MAAO,eAAMM,MAAO,QAASoC,QAAS,GACxC,CAAE1C,MAAO,eAAMM,MAAO,SAAUoC,QAAS,GACzC,CAAE1C,MAAO,eAAMM,MAAO,QAASoC,QAAS,GACxC,CAAE1C,MAAO,eAAMM,MAAO,UAAWoC,QAAS,KAG7B,SAASW,IAAmB,MAAD,EACZrB,EAAUoB,GADE,mBACjChC,EADiC,KACzB0B,EADyB,KAGxC,IAAI3B,EAAI,EACR,MAAMyB,EAAWxB,EACd6B,MAAK,CAACC,EAAGC,IAAOD,EAAElD,MAAQmD,EAAEnD,MAAQ,GAAK,IACzCuB,KAAKvB,GACJ,cAAC,EAAD,CAEEA,MAAOA,EACP+B,aAAc/B,EAAM0C,QACpBzC,QAAS6C,GAHJ3B,OAOX,OACE,sBAAKhB,UAAU,UAAf,UACE,0GAIA,qBACEA,UAAU,mBACVmD,MAAO,CAAEC,OAAQ,OAAQC,MAAO,eAFlC,SAIGZ,OChCT,MAAMQ,EAAwB,CAC5B,CAAEpD,MAAO,eAAMM,MAAO,SACtB,CAAEN,MAAO,eAAMM,MAAO,UACtB,CAAEN,MAAO,eAAMM,MAAO,SACtB,CAAEN,MAAO,eAAMM,MAAO,YAGT,SAASmD,IAMtB,OACE,sBAAKtD,UAAU,UAAf,UACE,8BACE,4FAEF,cAAC,EAAD,CACEiB,OAAQgC,EACRR,SAAU,CAAC,CAAE5C,MAAO,eAAMM,MAAO,QAASoC,QAAS,IACnDG,SAbN,SAAyBP,GACvBoB,QAAQC,IAAI,iBACZD,QAAQC,IAAIrB,SCRD,SAASsB,IACtB,OACE,gCACE,+BACE,sBAAMxD,KAAK,MAAMC,aAAW,SAA5B,0BADF,gBAMA,gFACA,+BACE,mBAAGwD,KAAK,qCAAR,oBACA,mBAAGA,KAAK,sCAAR,oBAGF,qBAAK1D,UAAU,UAAf,SACE,cAACsD,EAAD,MAGF,qBAAKtD,UAAU,UAAf,SACE,cAACkD,EAAD,MAEF,qBAAKlD,UAAU,UAAf,SACE,cAAC,EAAD,SCpBR2D,IAASC,OAAO,cAACH,EAAD,IAASrD,SAASyD,eAAe,U","file":"static/js/main.d4957da4.chunk.js","sourcesContent":["import React from 'react';\r\nimport emojiEvent from './lib/emojiEvent';\r\n\r\nexport default function EmojiComponent({ emoji, onClick }) {\r\n  return (\r\n    <span\r\n      className='emoji'\r\n      role='img'\r\n      aria-label={emoji.label ? emoji.label : 'Emoji'}\r\n      onClick={() => {\r\n        onClick && onClick();\r\n        document.dispatchEvent(emojiEvent(emoji));\r\n      }}\r\n    >\r\n      {emoji.emoji}\r\n    </span>\r\n  );\r\n}\r\n","const emojiEvent = (emoji) => {\r\n  // eslint-disable-next-line no-undef\r\n  const event = new Event('emoji', { bubbles: true });\r\n  event.emoji = emoji;\r\n  return event;\r\n};\r\n\r\nexport default emojiEvent;\r\n","import React, { useState, Fragment } from 'react';\r\nimport EmojiComponent from './EmojiComponent.js';\r\n\r\nexport default function EmojiPicker({\r\n  selectedEmojis,\r\n  availableEmojis,\r\n  onClick,\r\n}) {\r\n  const [open, isOpen] = useState(false);\r\n  const toggleOpen = () => isOpen(!open);\r\n\r\n  let i = 0;\r\n  const emojis = availableEmojis\r\n    .filter((e) => !selectedEmojis?.map((e) => e.emoji).includes(e.emoji))\r\n    .map((emoji) => {\r\n      return (\r\n        <EmojiComponent\r\n          key={++i}\r\n          emoji={emoji}\r\n          onClick={() => {\r\n            onClick(emoji);\r\n            toggleOpen();\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n  function EmojiMenu() {\r\n    return (\r\n      <div\r\n        className={open ? 'emoji-menu-open' : 'emoji-menu-closed'}\r\n        data-testid='emoji-menu'\r\n      >\r\n        {emojis}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {emojis.length > 0 && (\r\n        <span className='emoji-adder' onClick={toggleOpen}>\r\n          <EmojiComponent\r\n            emoji={{ emoji: '+', label: 'emoji-plus' }}\r\n            onClick={toggleOpen}\r\n          />\r\n          <EmojiMenu />\r\n        </span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport EmojiComponent from './EmojiComponent.js';\r\n\r\nexport default function EmojiCounter({ emoji, initialValue = 0, onClick }) {\r\n  return (\r\n    <span\r\n      className='emoji-container'\r\n      onClick={onClick ? () => onClick(emoji) : undefined}\r\n      data-testid='emojiCounter'\r\n    >\r\n      <EmojiComponent emoji={emoji} />\r\n      <div>\r\n        <span className='emoji-counter'>{initialValue}</span>\r\n      </div>\r\n    </span>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\n\r\nexport default function useEmojis(initialEmojis = []) {\r\n  const [emojis, dispatch] = useReducer(reducer, [...initialEmojis]);\r\n\r\n  const increment = (emoji) => dispatch({ type: 'increment', emoji: emoji });\r\n  const decrement = (emoji) => dispatch({ type: 'decrement', emoji: emoji });\r\n\r\n  return [emojis, increment, decrement];\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  const emoji = action.emoji;\r\n  let emojiFromState = state.filter((em) => em.emoji === emoji.emoji)[0];\r\n\r\n  if (!emojiFromState) {\r\n    emoji.counter = 0;\r\n    emojiFromState = emoji;\r\n  }\r\n  switch (action.type) {\r\n    case 'increment':\r\n      emojiFromState.counter++;\r\n      break;\r\n    case 'decrement':\r\n      emojiFromState.counter--;\r\n      if (emojiFromState.counter < 0) emojiFromState.counter = 0;\r\n  }\r\n  return [\r\n    ...state.filter((rea) => rea.emoji !== emojiFromState.emoji),\r\n    ...(emojiFromState.counter > 0 ? [emojiFromState] : []),\r\n  ];\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport EmojiCounter from './EmojiCounter';\r\nimport useEmojis from './lib/useEmojis';\r\n\r\nexport default function EmojiBlock({ emojis, selected = [], onUpdate }) {\r\n  const [state, increment] = useEmojis([...selected]);\r\n\r\n  useEffect(() => {\r\n    if (onUpdate) {\r\n      onUpdate(state);\r\n    }\r\n  }, [state, onUpdate]);\r\n\r\n  let i = 0;\r\n  const mappedReactions = state\r\n    .sort((a, b) => (a.emoji < b.emoji ? 1 : -1))\r\n    .map((emoji) => (\r\n      <EmojiCounter\r\n        key={i++}\r\n        emoji={emoji}\r\n        initialValue={emoji.counter}\r\n        onClick={increment}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className='reaction-block' data-testid='reaction-block'>\r\n      {mappedReactions}\r\n      <EmojiPicker\r\n        selectedEmojis={state}\r\n        onClick={increment}\r\n        availableEmojis={emojis}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { EmojiCounter, EmojiPicker, useEmojis } from 'lepre';\r\n\r\nconst DEFAULT_EMOJI_OPTIONS = [\r\n  { emoji: '🐼', label: 'panda' },\r\n  { emoji: '🐰', label: 'rabbit' },\r\n  { emoji: '🐨', label: 'koala' },\r\n  { emoji: '🐬', label: 'dolphin' },\r\n];\r\n\r\nexport default function CustomReactions() {\r\n  const [emojis, increment] = useEmojis([\r\n    { emoji: '🐼', label: 'panda', counter: 10 },\r\n  ]);\r\n\r\n  let i = 0;\r\n  const selected = emojis\r\n    .sort((a, b) => (a.emoji < b.emoji ? 1 : -1))\r\n    .map((emoji) => (\r\n      <EmojiCounter\r\n        key={i++}\r\n        emoji={emoji}\r\n        initialValue={emoji.counter}\r\n        onClick={increment}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className='comment'>\r\n      <div className='custom-picker'>\r\n        <EmojiPicker\r\n          availableEmojis={DEFAULT_EMOJI_OPTIONS}\r\n          onClick={increment}\r\n          selectedEmojis={emojis}\r\n        />\r\n      </div>\r\n      <p>You can customize the reaction block however you want!</p>\r\n      <div className='custom-selection'>{selected}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { EmojiCounter, useEmojis } from 'lepre';\r\n\r\nconst DEFAULT_EMOJI_OPTIONS = [\r\n  { emoji: '🐼', label: 'panda', counter: 0 },\r\n  { emoji: '🐰', label: 'rabbit', counter: 5 },\r\n  { emoji: '🐨', label: 'koala', counter: 3 },\r\n  { emoji: '🐬', label: 'dolphin', counter: 13 },\r\n];\r\n\r\nexport default function CustomReactions() {\r\n  const [emojis, increment] = useEmojis(DEFAULT_EMOJI_OPTIONS);\r\n\r\n  let i = 0;\r\n  const selected = emojis\r\n    .sort((a, b) => (a.emoji < b.emoji ? 1 : -1))\r\n    .map((emoji) => (\r\n      <EmojiCounter\r\n        key={i++}\r\n        emoji={emoji}\r\n        initialValue={emoji.counter}\r\n        onClick={increment}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className='comment'>\r\n      <p>\r\n        Mix and match the components and create your personalized Reaction\r\n        Block.\r\n      </p>\r\n      <div\r\n        className='custom-selection'\r\n        style={{ margin: 'auto', width: 'fit-content' }}\r\n      >\r\n        {selected}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport EmojiBlock from 'lepre';\r\n\r\nconst DEFAULT_EMOJI_OPTIONS = [\r\n  { emoji: '🐼', label: 'panda' },\r\n  { emoji: '🐰', label: 'rabbit' },\r\n  { emoji: '🐨', label: 'koala' },\r\n  { emoji: '🐬', label: 'dolphin' },\r\n];\r\n\r\nexport default function DefaultReactions() {\r\n  function onUpdateExample(state) {\r\n    console.log('State Updated');\r\n    console.log(state);\r\n  }\r\n\r\n  return (\r\n    <div className='comment'>\r\n      <div>\r\n        <p>This is a sample comment with the default reaction block.</p>\r\n      </div>\r\n      <EmojiBlock\r\n        emojis={DEFAULT_EMOJI_OPTIONS}\r\n        selected={[{ emoji: '🐼', label: 'panda', counter: 3 }]}\r\n        onUpdate={onUpdateExample}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport CustomReactions from './CustomReactions';\r\nimport CustomReactionsV2 from './CustomReactionsV2';\r\nimport DefaultReactions from './DefaultReactions';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span role='img' aria-label='rabbit'>\r\n          🐰\r\n        </span>\r\n        L.E.P.R.E.\r\n      </h1>\r\n      <h3>Lightweight Emoji Picker for React Enthusiasts</h3>\r\n      <h4>\r\n        <a href='https://github.com/PandaSekh/lepre'>Github</a>\r\n        <a href='https://www.npmjs.com/package/lepre'>npm</a>\r\n      </h4>\r\n\r\n      <div className='content'>\r\n        <DefaultReactions />\r\n      </div>\r\n\r\n      <div className='content'>\r\n        <CustomReactions />\r\n      </div>\r\n      <div className='content'>\r\n        <CustomReactionsV2 />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './index.css';\r\nimport './emojiBlock.css';\r\nimport './customEmojiBlock.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}