{"version":3,"sources":["../../src/lib/emojiEvent.js","../../src/Emoji.js","../../src/EmojiPicker.js","../../src/EmojiCounter.js","../../src/EmojiBlock.js","Reactions.js","App.js","index.js"],"names":["emojiEvent","emoji","event","Event","bubbles","Emoji","onClick","React","className","role","aria-label","label","document","dispatchEvent","EmojiAdder","selectedEmojis","EMOJI_SELECTION","useState","open","isOpen","toggleOpen","i","emojis","filter","e","map","includes","key","Fragment","console","log","length","EmojiMenu","EmojiCounter","initialValue","props","setEmojis","updateEmojiCount","emojiFromState","em","counter","rea","sort","a","b","mappedReactions","EmojiPicker","DEFAULT_EMOJI_OPTIONS","Reactions","App","ReactDOM","render","getElementById"],"mappings":"2OAAMA,EAAa,SAACC,GAElB,IAAMC,EAAQ,IAAIC,MAAM,QAAS,CAAEC,aAEnC,OADAF,EAAMD,MAAQA,EACPC,YCDeG,SAAQJ,UAAOK,YACrC,OACEC,0BACEC,UAAU,QACVC,KAAK,MACLC,aAAYT,EAAMU,MAAQV,EAAMU,MAAQ,QACxCL,QAAS,WACPA,GAAWA,IACXM,SAASC,cAAcb,EAAWC,MAGnCA,EAAMA,gBCVWa,SACtBC,mBACAC,oBACAV,cAEuBW,uBAAhBC,OAAMC,OACPC,EAAa,kBAAMD,GAAQD,IAE7BG,EAAI,EACFC,EAASN,EAAgBO,QAC7B,SAACC,UAAOT,EAAeU,KAAI,SAACD,UAAMA,EAAEvB,SAAOyB,SAASF,EAAEvB,UACtDwB,KAAI,SAACxB,UACLM,kBAACF,GACCsB,MAAON,EACPpB,MAAOA,EACPK,QAAS,WACPA,EAAQL,EAAMA,OACdmB,IACAR,SAASC,cAAcb,EAAWC,UAaxC,OACEM,kBAACqB,gBACEC,QAAQC,IAAIR,EAAOS,QACnBT,EAAOS,OAAS,GACfxB,0BAAMC,UAAU,cAAcF,QAASc,GACrCb,kBAACF,GACCJ,MAAO,CAAEA,MAAO,IAAKU,MAAO,cAC5BL,QAASc,IAEXb,mBAjBR,WACE,OACEA,yBAAKC,UAAWU,EAAO,kBAAoB,qBACxCI,KAcEU,iBCzCaC,SAAehC,UAAOiC,iBAAc5B,YAC1D,OACEC,0BAAMC,UAAU,kBAAkBF,QAAS,kBAAMA,EAAQL,KACvDM,kBAACF,GAAMJ,MAAOA,IACdM,6BACEA,0BAAMC,UAAU,iBAAiB0B,oBCJNC,SACLlB,mBAAS,IAA9BK,OAAQc,OAEf,SAASC,EAAiBpC,GACxB,IAAIqC,EAAiBhB,EAAOC,QAAO,SAACgB,UAAOA,EAAGtC,QAAUA,EAAMA,SAAO,GAChEqC,GASHA,EAAeE,UACfJ,GAAU,SAACd,SACT,UACKA,EAAOC,QAAO,SAACkB,UAAQA,EAAIxC,QAAUqC,EAAerC,UACvDqC,IACAI,MAAK,SAACC,EAAGC,UAAOD,EAAEH,QAAUI,EAAEJ,QAAU,GAAK,WAbjDF,EAAiBH,EAAMb,OAAOC,QAAO,SAACgB,UAAOA,EAAGtC,QAAUA,KAAO,IAClDuC,QAAU,EACzBJ,GAAU,SAACd,SACT,UAAIA,GAAQgB,IAAgBI,MAAK,SAACC,EAAGC,UACnCD,EAAEH,QAAUI,EAAEJ,QAAU,GAAK,SAcrC,IAAInB,EAAI,EACFwB,EAAkBvB,EAAOG,KAAI,SAACxB,UAClCM,kBAAC0B,GACCN,IAAKN,IACLpB,MAAOA,EACPiC,aAAcjC,EAAMuC,QACpBlC,QAAS+B,OAIb,OACE9B,yBAAKC,UAAU,gBACbD,yBAAKC,UAAU,kBACZqC,EACDtC,kBAACuC,GACC/B,eAAgBO,EAChBhB,QAAS+B,EACTrB,gBAAiBmB,EAAMb,YCzCjC,MAAMyB,EAAwB,CAC5B,CAAE9C,MAAO,eAAMU,MAAO,SACtB,CAAEV,MAAO,eAAMU,MAAO,SAOTqC,MAJG,IACT,kBAAC,EAAD,CAAY1B,OAAQyB,ICPd,SAASE,IACtB,OACE,yBAAKzC,UAAU,WACb,6BACE,wDAEF,kBAAC,EAAD,O,OCFN0C,EAASC,OAAO,kBAACF,EAAD,MAASrC,SAASwC,eAAe,W","file":"static/js/main.cccb9421.chunk.js","sourcesContent":["const emojiEvent = (emoji) => {\r\n  // eslint-disable-next-line no-undef\r\n  const event = new Event('emoji', { bubbles: true });\r\n  event.emoji = emoji;\r\n  return event;\r\n};\r\n\r\nexport default emojiEvent;\r\n","import React from 'react';\nimport emojiEvent from './lib/emojiEvent';\n\nexport default function Emoji({ emoji, onClick }) {\n  return (\n    <span\n      className='emoji'\n      role='img'\n      aria-label={emoji.label ? emoji.label : 'Emoji'}\n      onClick={() => {\n        onClick && onClick();\n        document.dispatchEvent(emojiEvent(emoji));\n      }}\n    >\n      {emoji.emoji}\n    </span>\n  );\n}\n","import React, { useState, Fragment } from 'react';\r\nimport Emoji from './Emoji';\r\nimport emojiEvent from './lib/emojiEvent';\r\n\r\nexport default function EmojiAdder({\r\n  selectedEmojis,\r\n  EMOJI_SELECTION,\r\n  onClick,\r\n}) {\r\n  const [open, isOpen] = useState(false);\r\n  const toggleOpen = () => isOpen(!open);\r\n\r\n  let i = 0;\r\n  const emojis = EMOJI_SELECTION.filter(\r\n    (e) => !selectedEmojis.map((e) => e.emoji).includes(e.emoji),\r\n  ).map((emoji) => (\r\n    <Emoji\r\n      key={++i}\r\n      emoji={emoji}\r\n      onClick={() => {\r\n        onClick(emoji.emoji);\r\n        toggleOpen();\r\n        document.dispatchEvent(emojiEvent(emoji));\r\n      }}\r\n    />\r\n  ));\r\n\r\n  function EmojiMenu() {\r\n    return (\r\n      <div className={open ? 'emoji-menu-open' : 'emoji-menu-closed'}>\r\n        {emojis}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log(emojis.length)}\r\n      {emojis.length > 0 && (\r\n        <span className='emoji-adder' onClick={toggleOpen}>\r\n          <Emoji\r\n            emoji={{ emoji: '+', label: 'emoji-plus' }}\r\n            onClick={toggleOpen}\r\n          />\r\n          <EmojiMenu />\r\n        </span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Emoji from './Emoji';\r\n\r\nexport default function EmojiCounter({ emoji, initialValue, onClick }) {\r\n  return (\r\n    <span className='emoji-container' onClick={() => onClick(emoji)}>\r\n      <Emoji emoji={emoji} />\r\n      <div>\r\n        <span className='emoji-counter'>{initialValue}</span>\r\n      </div>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport EmojiCounter from './EmojiCounter';\r\n\r\nexport default function EmojiBlock(props) {\r\n  const [emojis, setEmojis] = useState([]);\r\n\r\n  function updateEmojiCount(emoji) {\r\n    let emojiFromState = emojis.filter((em) => em.emoji === emoji.emoji)[0];\r\n    if (!emojiFromState) {\r\n      emojiFromState = props.emojis.filter((em) => em.emoji === emoji)[0];\r\n      emojiFromState.counter = 1;\r\n      setEmojis((emojis) =>\r\n        [...emojis, emojiFromState].sort((a, b) =>\r\n          a.counter < b.counter ? 1 : -1,\r\n        ),\r\n      );\r\n    } else {\r\n      emojiFromState.counter++;\r\n      setEmojis((emojis) =>\r\n        [\r\n          ...emojis.filter((rea) => rea.emoji !== emojiFromState.emoji),\r\n          emojiFromState,\r\n        ].sort((a, b) => (a.counter < b.counter ? 1 : -1)),\r\n      );\r\n    }\r\n  }\r\n\r\n  let i = 0;\r\n  const mappedReactions = emojis.map((emoji) => (\r\n    <EmojiCounter\r\n      key={i++}\r\n      emoji={emoji}\r\n      initialValue={emoji.counter}\r\n      onClick={updateEmojiCount}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className='reaction-div'>\r\n      <div className='reaction-block'>\r\n        {mappedReactions}\r\n        <EmojiPicker\r\n          selectedEmojis={emojis}\r\n          onClick={updateEmojiCount}\r\n          EMOJI_SELECTION={props.emojis}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport EmojiBlock from 'lepre';\r\n\r\nconst DEFAULT_EMOJI_OPTIONS = [\r\n  { emoji: '🐼', label: 'panda' },\r\n  { emoji: '📞', label: 'cell' },\r\n];\r\n\r\nconst Reactions = () => {\r\n  return <EmojiBlock emojis={DEFAULT_EMOJI_OPTIONS} />;\r\n};\r\n\r\nexport default Reactions;\r\n","import React from 'react';\r\nimport Reactions from './Reactions';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className='comment'>\r\n      <div>\r\n        <p>This is a sample comment</p>\r\n      </div>\r\n      <Reactions />\r\n    </div>\r\n  );\r\n}\r\n","import './index.css';\r\nimport './emojiBlock.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}