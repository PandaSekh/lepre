{"version":3,"sources":["../../src/EmojiComponent.js","../../src/lib/emojiEvent.js","../../src/EmojiPicker.js","../../src/EmojiCounter.js","../../src/lib/useEmojis.js","../../src/EmojiBlock.js","CustomReactions.js","DefaultReactions.js","App.js","index.js"],"names":["EmojiComponent","emoji","onClick","React","className","role","aria-label","label","document","dispatchEvent","event","Event","bubbles","EmojiPicker","selectedEmojis","availableEmojis","useState","open","isOpen","toggleOpen","i","emojis","filter","e","map","includes","key","Fragment","length","data-testid","EmojiMenu","EmojiCounter","initialValue","reducer","state","action","emojiFromState","em","type","counter","Error","rea","sort","a","b","useEmojis","initialEmojis","useReducer","dispatch","selected","increment","mappedReactions","DEFAULT_EMOJI_OPTIONS","CustomReactions","DefaultReactions","App","ReactDOM","render","getElementById"],"mappings":"4RAGwBA,GAAeC,MAAEA,EAAFA,QAASC,IAC9C,OACEC,0BACEC,UAAU,QACVC,KAAK,MACLC,aAAYL,EAAMM,MAAQN,EAAMM,MAAQ,QACxCL,QAAS,KACPA,GAAWA,IACXM,SAASC,cCXGR,KAElB,MAAMS,EAAQ,IAAIC,MAAM,QAAS,CAAEC,aAEnC,OADAF,EAAMT,MAAQA,EACPS,GAJWT,CDWsBA,MAGnCA,EAAMA,gBEXWY,GAAYC,eAClCA,EADkCA,gBAElCC,EAFkCD,QAGlCZ,YAEuBc,uBAFvBd,mBAEOe,EAFPf,KAEagB,EAFbhB,KAGMiB,EAAa,IAAMD,GAAQD,GAEjC,IAAIG,EAAI,EACR,MAAMC,EAASN,EACZO,OAAQC,KAAOT,WAAgBU,IAAKD,GAAMA,EAAEtB,OAAOwB,SAASF,EAAEtB,SAC9DuB,IAAKvB,GAEFE,kBAACH,GACC0B,MAAON,EACPnB,MAAOA,EACPC,QAAS,KACPA,EAAQD,GACRkB,QAiBV,OACEhB,kBAACwB,gBACEN,EAAOO,OAAS,GACfzB,0BAAMC,UAAU,cAAcF,QAASiB,GACrChB,kBAACH,GACCC,MAAO,CAAEA,MAAO,IAAKM,MAAO,cAC5BL,QAASiB,IAEXhB,mBAnBR,WACE,OACEA,yBACEC,UAAWa,EAAO,kBAAoB,oBACtCY,cAAY,cAEXR,KAaES,iBC3CaC,GAAa9B,MAAEA,EAAFA,aAAS+B,EAAe,EAAxB/B,QAA2BC,IAC9D,OACEC,0BACEC,UAAU,kBACVF,QAASA,EAAU,IAAMA,EAAQD,UACjC4B,cAAY,gBAEZ1B,kBAACH,GAAeC,MAAOA,IACvBE,6BACEA,0BAAMC,UAAU,iBAAiB4B,KCVzC,SAASC,EAAQC,EAAOC,GACtB,MAAMlC,EAAQkC,EAAOlC,MACfmC,EAAiBF,EAAMZ,OAAQe,GAAOA,EAAGpC,QAAUA,EAAMA,OAAO,GAEtE,GAAKmC,EAGE,CACL,OAAQD,EAAOG,MACb,IAAK,YACHF,EAAeG,UACf,MACF,IAAK,YACHH,EAAeG,UACf,MACF,QACE,UAAUC,MAAM,kBAEpB,MAAO,IACFN,EAAMZ,OAAQmB,GAAQA,EAAIxC,QAAUmC,EAAenC,UAClDmC,EAAeG,QAAU,EAAI,CAACH,GAAkB,IACpDM,KAAK,CAACC,EAAGC,IAAOD,EAAEJ,QAAUK,EAAEL,QAAU,GAAK,GAf/C,OADAtC,EAAMsC,QAAU,EACT,IAAIL,EAAOjC,GAAOyC,KAAK,CAACC,EAAGC,IAAOD,EAAEJ,QAAUK,EAAEL,QAAU,GAAK,GAmB1E,SAAwBM,EAAUC,EAAgB,YACrBC,qBACzBd,EACA,IAAIa,GAAeJ,KAAK,CAACC,EAAGC,IAAOD,EAAEJ,QAAUK,EAAEL,QAAU,GAAK,IAHlB,mBACzClB,EADyC,KACjC2B,EADiC,KAShD,MAAO,CAAC3B,EAHWpB,GAAU+C,EAAS,CAAEV,KAAM,YAAarC,MAAOA,IAC/CA,GAAU+C,EAAS,CAAEV,KAAM,YAAarC,MAAOA,qBC7BjCoB,OAAEA,EAAFA,SAAU4B,EAAW,aAC3BJ,EAAU,IAAII,IADa,mBAC/Cf,EAD+C,KACxCgB,EADwC,KAEtD,IAAI9B,EAAI,EACR,MAAM+B,EAAkBjB,EAAMV,IAAKvB,GACjCE,kBAAC4B,GACCL,IAAKN,IACLnB,MAAOA,EACP+B,aAAc/B,EAAMsC,QACpBrC,QAASgD,KAIb,OACE/C,yBAAKC,UAAU,kBACZ+C,EACDhD,kBAACU,GACCC,eAAgBoB,EAChBhC,QAASgD,EACTnC,gBAAiBM,MCpBzB,MAAM+B,EAAwB,CAC5B,CAAEnD,MAAO,eAAMM,MAAO,SACtB,CAAEN,MAAO,eAAMM,MAAO,SAET,SAAS8C,IAAmB,MAAD,EACZR,IADY,mBACjCxB,EADiC,KACzB6B,EADyB,KAGxC,IAAI9B,EAAI,EACR,MAAM6B,EAAW5B,EAAOG,IAAKvB,GAC3B,kBAAC,EAAD,CACEyB,IAAKN,IACLnB,MAAOA,EACP+B,aAAc/B,EAAMsC,QACpBrC,QAASgD,KAIb,OACE,yBAAK9C,UAAU,WACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CACEW,gBAAiBqC,EACjBlD,QAASgD,EACTpC,eAAgBO,KAGpB,qFACA,yBAAKjB,UAAU,oBAAoB6C,IC3BzC,MAAMG,EAAwB,CAC5B,CAAEnD,MAAO,eAAMM,MAAO,SACtB,CAAEN,MAAO,eAAMM,MAAO,SAET,SAAS+C,IACtB,OACE,yBAAKlD,UAAU,WACb,6BACE,yFAEF,kBAAC,EAAD,CAAYiB,OAAQ+B,KCTX,SAASG,IACtB,OACE,6BACE,4BACE,0BAAMlD,KAAK,MAAMC,aAAW,UAA5B,gBADF,cAMA,8EAEA,yBAAKF,UAAU,WACb,kBAACkD,EAAD,OAGF,yBAAKlD,UAAU,WACb,kBAACiD,EAAD,QCZRG,IAASC,OAAO,kBAACF,EAAD,MAAS/C,SAASkD,eAAe,W","file":"static/js/main.df4a1159.chunk.js","sourcesContent":["import React from 'react';\r\nimport emojiEvent from './lib/emojiEvent';\r\n\r\nexport default function EmojiComponent({ emoji, onClick }) {\r\n  return (\r\n    <span\r\n      className='emoji'\r\n      role='img'\r\n      aria-label={emoji.label ? emoji.label : 'Emoji'}\r\n      onClick={() => {\r\n        onClick && onClick();\r\n        document.dispatchEvent(emojiEvent(emoji));\r\n      }}\r\n    >\r\n      {emoji.emoji}\r\n    </span>\r\n  );\r\n}\r\n","const emojiEvent = (emoji) => {\r\n  // eslint-disable-next-line no-undef\r\n  const event = new Event('emoji', { bubbles: true });\r\n  event.emoji = emoji;\r\n  return event;\r\n};\r\n\r\nexport default emojiEvent;\r\n","import React, { useState, Fragment } from 'react';\r\nimport EmojiComponent from './EmojiComponent.js';\r\n\r\nexport default function EmojiPicker({\r\n  selectedEmojis,\r\n  availableEmojis,\r\n  onClick,\r\n}) {\r\n  const [open, isOpen] = useState(false);\r\n  const toggleOpen = () => isOpen(!open);\r\n\r\n  let i = 0;\r\n  const emojis = availableEmojis\r\n    .filter((e) => !selectedEmojis?.map((e) => e.emoji).includes(e.emoji))\r\n    .map((emoji) => {\r\n      return (\r\n        <EmojiComponent\r\n          key={++i}\r\n          emoji={emoji}\r\n          onClick={() => {\r\n            onClick(emoji);\r\n            toggleOpen();\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n  function EmojiMenu() {\r\n    return (\r\n      <div\r\n        className={open ? 'emoji-menu-open' : 'emoji-menu-closed'}\r\n        data-testid='emoji-menu'\r\n      >\r\n        {emojis}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {emojis.length > 0 && (\r\n        <span className='emoji-adder' onClick={toggleOpen}>\r\n          <EmojiComponent\r\n            emoji={{ emoji: '+', label: 'emoji-plus' }}\r\n            onClick={toggleOpen}\r\n          />\r\n          <EmojiMenu />\r\n        </span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport EmojiComponent from './EmojiComponent.js';\r\n\r\nexport default function EmojiCounter({ emoji, initialValue = 0, onClick }) {\r\n  return (\r\n    <span\r\n      className='emoji-container'\r\n      onClick={onClick ? () => onClick(emoji) : undefined}\r\n      data-testid='emojiCounter'\r\n    >\r\n      <EmojiComponent emoji={emoji} />\r\n      <div>\r\n        <span className='emoji-counter'>{initialValue}</span>\r\n      </div>\r\n    </span>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  const emoji = action.emoji;\r\n  const emojiFromState = state.filter((em) => em.emoji === emoji.emoji)[0];\r\n\r\n  if (!emojiFromState) {\r\n    emoji.counter = 1;\r\n    return [...state, emoji].sort((a, b) => (a.counter < b.counter ? 1 : -1));\r\n  } else {\r\n    switch (action.type) {\r\n      case 'increment':\r\n        emojiFromState.counter++;\r\n        break;\r\n      case 'decrement':\r\n        emojiFromState.counter--;\r\n        break;\r\n      default:\r\n        throw new Error('Invalid action');\r\n    }\r\n    return [\r\n      ...state.filter((rea) => rea.emoji !== emojiFromState.emoji),\r\n      ...(emojiFromState.counter > 0 ? [emojiFromState] : []),\r\n    ].sort((a, b) => (a.counter < b.counter ? 1 : -1));\r\n  }\r\n}\r\n\r\nexport default function useEmojis(initialEmojis = []) {\r\n  const [emojis, dispatch] = useReducer(\r\n    reducer,\r\n    [...initialEmojis].sort((a, b) => (a.counter < b.counter ? 1 : -1)),\r\n  );\r\n\r\n  const increment = (emoji) => dispatch({ type: 'increment', emoji: emoji });\r\n  const decrement = (emoji) => dispatch({ type: 'decrement', emoji: emoji });\r\n\r\n  return [emojis, increment, decrement];\r\n}\r\n","import React from 'react';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport EmojiCounter from './EmojiCounter';\r\nimport useEmojis from './lib/useEmojis';\r\n\r\nexport default function EmojiBlock({ emojis, selected = [] }) {\r\n  const [state, increment] = useEmojis([...selected]);\r\n  let i = 0;\r\n  const mappedReactions = state.map((emoji) => (\r\n    <EmojiCounter\r\n      key={i++}\r\n      emoji={emoji}\r\n      initialValue={emoji.counter}\r\n      onClick={increment}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className='reaction-block'>\r\n      {mappedReactions}\r\n      <EmojiPicker\r\n        selectedEmojis={state}\r\n        onClick={increment}\r\n        availableEmojis={emojis}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { EmojiCounter, EmojiPicker, useEmojis } from 'lepre';\r\n\r\nconst DEFAULT_EMOJI_OPTIONS = [\r\n  { emoji: 'üêº', label: 'panda' },\r\n  { emoji: 'üìû', label: 'cell' },\r\n];\r\nexport default function CustomReactions() {\r\n  const [emojis, increment] = useEmojis();\r\n\r\n  let i = 0;\r\n  const selected = emojis.map((emoji) => (\r\n    <EmojiCounter\r\n      key={i++}\r\n      emoji={emoji}\r\n      initialValue={emoji.counter}\r\n      onClick={increment}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className='comment'>\r\n      <div className='custom-picker'>\r\n        <EmojiPicker\r\n          availableEmojis={DEFAULT_EMOJI_OPTIONS}\r\n          onClick={increment}\r\n          selectedEmojis={emojis}\r\n        />\r\n      </div>\r\n      <p>You can customize the reaction block however you want!</p>\r\n      <div className='custom-selection'>{selected}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport EmojiBlock from 'lepre';\r\n\r\nconst DEFAULT_EMOJI_OPTIONS = [\r\n  { emoji: 'üêº', label: 'panda' },\r\n  { emoji: 'üìû', label: 'cell' },\r\n];\r\nexport default function DefaultReactions() {\r\n  return (\r\n    <div className='comment'>\r\n      <div>\r\n        <p>This is a sample comment with the default reaction block.</p>\r\n      </div>\r\n      <EmojiBlock emojis={DEFAULT_EMOJI_OPTIONS} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport CustomReactions from './CustomReactions';\r\nimport DefaultReactions from './DefaultReactions';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span role='img' aria-label='rabbit'>\r\n          üê∞\r\n        </span>\r\n        L.E.P.R.E.\r\n      </h1>\r\n      <h3>Lightweight Emoji Picker for React Enthusiasts</h3>\r\n\r\n      <div className='content'>\r\n        <DefaultReactions />\r\n      </div>\r\n\r\n      <div className='content'>\r\n        <CustomReactions />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './index.css';\r\nimport './emojiBlock.css';\r\nimport './customEmojiBlock.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}